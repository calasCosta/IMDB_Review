<%- include('components/header') %>

<div class="container">
  <h2 class="page-title">Avaliação do Classificador</h2>

  <div class="filter-form">
    <form method="POST" action="/stats" style="margin-bottom:20px;">
        <label for="limit">Limit:</label>
        <select name="limit" id="limit" onchange="this.form.submit()">
          <option value="10" <%= limit == 10 ? 'selected' : '' %>>10</option>
          <option value="50" <%= limit == 50 ? 'selected' : '' %>>50</option>
          <option value="100" <%= limit == 100 ? 'selected' : '' %>>100</option>
          <option value="200" <%= limit == 200 ? 'selected' : '' %>>200</option>
        </select>
    </form>
  </div>  

  <div class="card">
    <h3>Confusion Matrix</h3>
    <table class="matrics-table metrics-table">
      <thead>
        <tr>
          <th></th>
          <th>Actually Positive</th>
          <th>Actually Negative</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Predicted Positive</th>
          <td><%= matrix.positive?.positive || 0 %></td> <!-- True Positives -->
          <td><%= matrix.negative?.positive || 0 %></td> <!-- False Positives -->
        </tr>
        <tr>
          <th>Predicted Negative</th>
          <td><%= matrix.positive?.negative || 0 %></td> <!-- False Negatives -->
          <td><%= matrix.negative?.negative || 0 %></td> <!-- True Negatives -->
        </tr>
      </tbody>
    </table>
  </div>

  <div class="card">
    <h3>Metrics</h3>
    <table class="metrics-table">
      <thead>
        <tr>
          <th>Classe</th>
          <th>Accuracy</th>
          <th>Precision</th>
          <th>Recall</th>
          <th>F1-score</th>
          <th>Support</th>
        </tr>
      </thead>
      <tbody>
        <% for (let cls in metrics) { %>
          <tr>
            <td><%= cls %></td>
            <td><%= metrics[cls].accuracy %></td>
            <td><%= metrics[cls].precision %></td>
            <td><%= metrics[cls].recall %></td>
            <td><%= metrics[cls].f1 %></td>
            <td><%= metrics[cls].support %></td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>
</div>

<div class="card">
  <h3>Top terms by class</h3>
  <div class="filter-form">
    <form method="POST" action="/stats" style="margin-bottom:20px;">
        <label for="topKLimit">Limit:</label>
        <select name="topKLimit" id="topKLimit">
          <option value="5">5</option>
          <option value="10" selected>10</option>
          <option value="15">15</option>
          <option value="20">20</option>
        </select>
    </form>
  </div>  
  <div style="display: flex; gap: 24px; flex-wrap: wrap;">
    <% for (let className in trainedData) {  
         let classData = trainedData[className]; %>
      <div style="flex:1; min-width: 320px; border:1px solid #eee; border-radius:8px; padding:16px; margin-bottom:16px;">
        <h4>
          <span class="badge <%= className === 'positive' ? 'badge-positive' : 'badge-negative' %>">
            <%= className %>
          </span>
          <small style="color:#888;">P(<%= className %>) = <%= classData.priorProbability?.toFixed(3) %></small>
        </h4>
        <table class="metrics-table">
          <tr>
            <th style="background:#eafaf1;color:#27ae60;">Unigram</th>
            <th style="background:#eafaf1;color:#27ae60;">TFIDF</th>
            <th style="background:#fdeaea;color:#e74c3c;">Bigram</th>
            <th style="background:#fdeaea;color:#e74c3c;">TFIDF</th>
          </tr>
          <% 
            const unis = classData.topKPerN?.[1] || [];
            const bis = classData.topKPerN?.[2] || [];
            for(let i=0; i<Math.max(unis.length, bis.length); i++) { 
          %>
            <tr data-index="<%= i %>">
              <td><%= unis[i]?.name || '' %></td>
              <td><%= unis[i] ? unis[i].tfidf.toFixed(4) : '' %></td>
              <td><%= bis[i]?.name || '' %></td>
              <td><%= bis[i] ? bis[i].tfidf.toFixed(4) : '' %></td>
            </tr>
          <% } %>
        </table>
      </div>
    <% } %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  function filterRows() {
    const limit = parseInt(document.getElementById('topKLimit').value, 10);
    document.querySelectorAll('.metrics-table').forEach(table => {
      const rows = table.querySelectorAll('tbody tr[data-index]');
      rows.forEach((row, idx) => {
        row.style.display = idx < limit ? '' : 'none';
      });
    });
  }
  document.getElementById('topKLimit').addEventListener('change', filterRows);
  filterRows(); // Initial call
});
</script>

<%- include('components/footer') %>
